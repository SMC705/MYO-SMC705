#N canvas 11 276 570 492 10;
#X declare -lib mrpeach;
#X obj -18 -333 cnv 15 375 130 empty empty empty 20 12 0 14 -204786
-66577 0;
#X obj -197 -333 cnv 15 175 175 empty empty empty 20 12 0 14 -261234
-66577 0;
#X obj -182 -184 s global_stop;
#X obj -182 -206 bng 15 250 50 0 empty empty empty 17 7 0 10 -258113
-1 -1;
#X msg -185 -299 \; pd dsp \$1;
#X obj -185 -324 tgl 15 0 empty empty empty 17 7 0 10 -204786 -1 -1
0 1;
#X text -158 -326 Turn DSP On/Off;
#X text -160 -206 Stop all audio files;
#X obj -185 -254 bng 15 250 50 0 empty empty empty 17 7 0 10 -4034
-1 -1;
#X obj -185 -232 s global_start;
#X text -163 -254 Start all audio files;
#X obj 49 -202 cnv 15 110 325 empty empty empty 20 12 0 14 -261682
-66577 0;
#N canvas 598 212 611 533 osc_things 0;
#X msg -987 -139 47 \$1 \$2 \$3 0 0 0 0 44 105 0 0 0 0 0 \$4;
#X obj -987 -113 unpackOSC;
#X obj -987 -166 udpreceive 7890;
#X obj -985 -60 print OSCrcv;
#X obj -821 -11 s preset_select;
#X obj -903 45 expr ( $f1 - 1 ) / 127;
#X obj -821 -56 change;
#X obj -519 -163 import mrpeach;
#X obj -903 72 s volume_slider;
#X obj -862 -31 - 1;
#X obj -903 -85 routeOSC /vol /src /pst /ulk;
#X obj -712 -35 s unlocked;
#X text -977 211 udpreceive receives 4 ASCII values from C++ via port
7890 (in this case) OSC values are formatted in groups of four so that
unpackOSC can read and translate from 'ASCII list' to values that Pd
understands. 1 = / 2 = v- 3 = o- 4 = l- 5 = 0 6 = 0 7 = 0 8 = 0 9 =
\, 10 =i 11 =0 12 =0 13 =0 14 =0 15 =0 16 = 1-127 (received value to
use with the adress)- routeOSC reads the unpacked OSC data and routes
the values to an output denpendant on the address (first four values
in the ASCII list). vol = volume src = source pst = presets ulk = locked/unlocked
MYO;
#X obj -650 -115 s gestcount;
#X obj -862 15 s input_select;
#X obj -862 -57 change;
#X msg -650 -139 \$1\$2\$3;
#X text -654 -97 to gesture counter (N° clicks);
#X obj -712 -57 change;
#X obj -821 -34 - 1;
#X text -796 72 volume;
#X text -765 14 input;
#X text -717 -12 presets;
#X text -642 -37 unlocked/locked;
#X connect 0 0 1 0;
#X connect 1 0 10 0;
#X connect 2 0 0 0;
#X connect 2 0 16 0;
#X connect 5 0 8 0;
#X connect 6 0 19 0;
#X connect 9 0 14 0;
#X connect 10 0 5 0;
#X connect 10 1 15 0;
#X connect 10 2 6 0;
#X connect 10 3 18 0;
#X connect 15 0 9 0;
#X connect 16 0 13 0;
#X connect 18 0 11 0;
#X connect 19 0 4 0;
#X restore 55 -97 pd osc_things;
#X obj 57 100 s master_volume;
#X obj 57 -35 vsl 85 128 0 1 0 0 empty empty Volume 0 -9 0 10 -204786
-258113 -4160 0 1;
#X obj 56 -72 r volume_slider;
#X text -10 -329 This patch plays the audio from (at present) 6 different
inputs simultaneously. To select which audio to hear \, choose a source
from the radio object (a number from 0-5). Each input/audio player
will loop it's audio file until it receives the global stop command.
Each audio player has it's own volume receive which takes input 0 as
minimum volume and 1 as max (if we decide to give each source this
function?). There is also a master volume which takes the same min/max
values.;
#X obj -82 -158 cnv 15 130 150 empty empty empty 20 12 0 14 -257985
-66577 0;
#X obj -77 -138 vradio 25 1 0 4 empty preset_select Preset_Select 0
-8 0 10 -262144 -1 -1 0;
#X text -49 -134 Noise Reduction;
#X text -50 -58 Treble Boost;
#X text -49 -108 Feedback Killer;
#N canvas 554 113 704 655 phone_osc 0;
#X obj 115 -680 cnv 15 250 185 empty empty audio_select 10 12 0 14
-233017 -66577 0;
#X obj 13 -851 cnv 15 230 170 empty empty presets_selection 10 12 0
14 -204800 -66577 0;
#X obj 12 -992 cnv 15 120 140 empty empty volume_n_mute 10 12 0 14
-232576 -66577 0;
#X obj 15 -1091 unpackOSC;
#X obj 98 -905 s vm;
#X obj 92 -768 s p1;
#X obj 115 -743 s p2;
#X obj 138 -721 s p3;
#X obj 161 -701 s p4;
#X obj 92 -790 select 1 2 3;
#X obj 253 -594 int;
#X msg 253 -571 set \$1;
#X msg 253 -542 0;
#X obj 193 -557 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 15 -1127 udpreceive 9000;
#X obj 253 -518 s input_select;
#N canvas 225 364 379 357 step_volume 0;
#X msg 61 -805 set \$1;
#X msg 145 -779 0;
#X msg -12 -778 0;
#X obj 65 -842 clip 0 1;
#X obj 46 -891 r master_volume;
#X obj 65 -863 r step_volume;
#X msg 58 -670 \; volume_slider \$1 \; step_volume \$1;
#X obj -12 -816 inlet;
#X obj 145 -814 inlet;
#X obj -12 -756 + 0.25;
#X obj 146 -758 - 0.25;
#X obj 207 -814 inlet;
#X text -16 -837 Increase;
#X text 143 -835 Decrease;
#X text 210 -834 Mute;
#X obj 58 -691 *;
#X obj 220 -742 t b f;
#X obj -5 -866 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 58 -724 5 0 0 0 - - -;
#X obj 207 -790 select 0;
#X msg 207 -765 1;
#X msg 252 -765 0;
#X text -4 -611 This subpatch receive a bang from the + and - button
of the phone and increment the volume in the main patch. It also receive
values of the current main volume.;
#X obj 191 -862 loadbang;
#X connect 0 0 1 0;
#X connect 0 0 2 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 3 0;
#X connect 7 0 2 0;
#X connect 8 0 1 0;
#X connect 9 0 18 0;
#X connect 10 0 18 0;
#X connect 11 0 19 0;
#X connect 15 0 6 0;
#X connect 16 0 15 0;
#X connect 16 1 15 1;
#X connect 17 0 2 0;
#X connect 18 0 15 0;
#X connect 19 0 20 0;
#X connect 19 1 21 0;
#X connect 20 0 16 0;
#X connect 21 0 16 0;
#X connect 23 0 20 0;
#X restore 15 -872 pd step_volume;
#X obj 529 -1112 cnv 15 150 200 empty empty Phone_screen 20 0 0 14
-203904 -66577 0;
#X obj 632 -1040 bng 20 250 50 0 empty volume_up + 7 10 2 12 -228856
-128992 -1;
#X obj 632 -1009 bng 20 250 50 0 empty volume_down _ 7 5 2 12 -228856
-128992 -1;
#X obj 657 -1022 tgl 15 0 empty vm M 4 7 2 10 -228856 -86277 -1 0 1
;
#X obj 556 -1095 bng 20 250 50 0 empty p1 P1 4 11 2 12 -228856 -128992
-1;
#X obj 589 -1095 bng 20 250 50 0 empty p2 P2 4 11 2 12 -228856 -128992
-1;
#X obj 615 -1096 bng 20 250 50 0 empty p3 P3 4 11 2 12 -228856 -128992
-1;
#X obj 641 -1096 bng 20 250 50 0 empty p4 P4 4 11 2 12 -228856 -128992
-1;
#X obj 604 -1054 vradio 20 1 0 5 empty input_select empty 0 -8 0 10
-228856 -1 -1 0;
#X text 582 -974 TV;
#X text 538 -1055 Microphone;
#X text 565 -1035 Music;
#X text 541 -1015 Telephone;
#X text 566 -994 Radio;
#X obj 604 -949 bng 20 250 50 0 empty input_select S 8 10 0 10 -262144
-1 -1;
#X obj 324 -903 cnv 15 370 80 empty empty empty 20 12 0 14 -204786
-66577 0;
#N canvas 67 295 453 381 countclicks 0;
#X obj -15 -251 inlet;
#X obj -15 55 s phoneclicks;
#X obj -15 -226 routeOSC /volume /vmute /preset /setsource /source
/unlocked;
#X obj -15 -202 sel 1 0;
#X obj -15 -104 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom -15 26 5 0 0 0 - - -;
#X obj -15 -29 spigot;
#X obj -15 -1 counter;
#X obj 282 -87 sel 1;
#X msg 321 -126 \; unlocked \$1;
#X obj 282 -161 t f f f;
#X obj 104 -166 change;
#X obj 163 -166 change;
#X msg 223 -194 9;
#X text 78 -14 this ugly patch counts how many clicks are made with
the phone: -when jou adjust source (different consequent clicks for
the source are not counted) -when you press any other button than 'lock'
\, not in a repetitive way (ex.: 2 or more clicks on same button will
be counted as 1);
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 2 2 11 0;
#X connect 2 3 12 0;
#X connect 2 4 13 0;
#X connect 2 5 10 0;
#X connect 3 0 4 0;
#X connect 3 1 4 0;
#X connect 4 0 6 0;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 8 0 7 3;
#X connect 10 0 8 0;
#X connect 10 1 6 1;
#X connect 10 2 9 0;
#X connect 11 0 6 0;
#X connect 12 0 6 0;
#X connect 13 0 12 0;
#X restore 41 -1044 pd countclicks;
#X obj 15 -929 spigot;
#X obj 74 -930 spigot;
#X obj 134 -822 spigot;
#X obj 193 -645 spigot;
#X obj 253 -646 spigot;
#X obj 48 -967 r phonelock;
#X obj 14 -739 s preset_select;
#X obj 14 -763 - 1;
#X obj 253 -618 * 4.99;
#X obj 15 -1019 routeOSC /volume /vmute /preset /setsource /source
/unlocked;
#X obj 15 -898 select 1 0;
#X msg 312 -990 \; phonelock \$1;
#X obj 82 -1067 print phone_action;
#X obj 167 -849 r phonelock;
#X obj 226 -673 r phonelock;
#X text 335 -899 This subpatch receives values from the TouchOSC app
installed on Iphone simulating the ConnectLine from Oticon. Then \,
it shows the values received and it routes them to the main patch.
The patch doesn't pass these values if the phone is not locked;
#X text 240 -1037 divide between messages;
#X connect 3 0 33 0;
#X connect 3 0 43 0;
#X connect 3 0 46 0;
#X connect 9 0 5 0;
#X connect 9 1 6 0;
#X connect 9 2 7 0;
#X connect 9 3 8 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 15 0;
#X connect 13 0 12 0;
#X connect 14 0 3 0;
#X connect 34 0 44 0;
#X connect 35 0 4 0;
#X connect 35 0 16 2;
#X connect 36 0 9 0;
#X connect 36 0 41 0;
#X connect 37 0 13 0;
#X connect 38 0 42 0;
#X connect 39 0 34 1;
#X connect 39 0 35 1;
#X connect 41 0 40 0;
#X connect 42 0 10 0;
#X connect 43 0 34 0;
#X connect 43 1 35 0;
#X connect 43 2 36 0;
#X connect 43 3 37 0;
#X connect 43 4 38 0;
#X connect 43 5 45 0;
#X connect 44 0 16 0;
#X connect 44 1 16 1;
#X connect 47 0 36 1;
#X connect 48 0 37 1;
#X connect 48 0 38 1;
#X restore 55 -123 pd phone_osc;
#N canvas 557 29 713 434 test 1;
#X obj -195 -488 cnv 15 600 210 empty empty empty 20 12 0 14 -233017
-66577 0;
#X obj -296 -381 cnv 15 100 135 empty empty file_ops 20 12 0 14 -232576
-66577 0;
#X obj -134 -285 cnv 25 100 40 empty empty userID 20 12 0 14 -203904
-66577 0;
#X obj 68 -285 cnv 15 100 40 empty empty n°_clicks 20 12 0 14 -262130
-66577 0;
#X obj -33 -325 cnv 15 100 80 empty empty tasks 20 12 0 14 -204800
-66577 0;
#X obj 164 -285 cnv 15 160 40 empty empty timer_(manual) 20 12 0 14
-261682 -66577 0;
#X obj 325 -295 cnv 15 80 50 empty empty device 20 12 0 14 -261234
-66577 0;
#X obj -195 -285 cnv 15 60 40 empty empty line 0 12 0 14 -204786 -66577
0;
#X obj -294 -334 bng 25 250 50 0 empty empty add_values 27 12 0 10
-4034 -262144 -1;
#X obj -293 -272 bng 25 250 50 0 empty empty save_file 27 12 0 10 -258113
-1 -1;
#X floatatom -27 -265 5 0 0 0 - - -;
#X floatatom -126 -265 5 0 1000 0 - - -;
#X floatatom 73 -265 5 0 0 0 - - -;
#X obj -126 -360 r subjectID;
#X msg -293 -201 \; txt write results/tasks.txt;
#X obj -126 -474 bng 45 250 50 0 empty empty next_subject -20 -7 0
10 -4032 -1 -1;
#X obj -126 -381 s nextsubj;
#N canvas 896 412 407 299 tasks 0;
#X obj -121 1 cnv 15 250 250 empty empty Task_selection 20 12 0 14
-233017 -66577 0;
#X msg 61 123 1;
#X obj 61 32 loadbang;
#X text 72 123 reset;
#X msg -109 123 inc;
#X text -92 123 rease;
#X obj -109 36 inlet;
#X obj -109 230 outlet;
#X obj -109 193 shuffle 1 5 0.5;
#X obj -109 159 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 10 150 counter 1 25;
#X obj 39 231 outlet;
#X text -67 232 1;
#X text 83 231 2;
#X msg -79 62 \; newtask bang \; volume_slider 0.05;
#X obj -84 167 loadbang;
#X text -108 206 send random task label;
#X text -104 261 this patch counts number of current task and number
of iterations \, while increasing +1 then NEXT button is pressed;
#X text 12 162 counts the number of tasks in an iteration;
#X connect 1 0 10 3;
#X connect 2 0 1 0;
#X connect 4 0 9 0;
#X connect 4 0 10 0;
#X connect 6 0 4 0;
#X connect 6 0 14 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 15 0 8 0;
#X restore -27 -383 pd tasks;
#X obj -27 -474 bng 45 250 50 0 empty empty next 10 20 0 10 -257985
-1 -1;
#N canvas 798 159 363 355 clicks 0;
#X obj -9 -55 cnv 15 250 270 empty empty count_number_actions 20 12
0 14 -233017 -66577 0;
#X floatatom 131 161 5 0 0 0 - - -;
#X obj 131 112 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 167 139 + 1;
#X obj 80 -29 r gestcount;
#X obj 131 181 outlet;
#X obj 80 -4 atoi;
#X obj 80 68 change;
#X obj 177 160 r phoneclicks;
#X obj 48 111 r unlocked;
#X obj 131 140 f 0;
#X text -9 221 Every new gesture (UNLOCK \, FIST \, F.SPREAD \, FIST)
the counter increase by 1 Every time the MYO unlock \, counter is reset.
Same for every button pressed on the phone AFTER unlock and BEFORE
unlock. so Lock and Unlock on the phone are not counted as clicks;
#X connect 1 0 5 0;
#X connect 2 0 10 0;
#X connect 3 0 10 1;
#X connect 4 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 2 0;
#X connect 8 0 5 0;
#X connect 9 0 10 0;
#X connect 10 0 3 0;
#X connect 10 0 1 0;
#X restore 73 -383 pd clicks;
#X text -295 -173 write the content of textfile object inda file;
#X obj 252 -356 bng 35 250 50 0 empty empty reset 3 -7 0 10 -4032 -1
-1;
#X floatatom 171 -265 5 0 0 0 - - -;
#N canvas 231 233 369 511 timermanual 0;
#X obj -22892 -434 cnv 15 330 440 empty empty timer 20 12 0 14 -233017
-66577 0;
#X obj -22840 -87 f;
#X msg -22762 -122 0;
#X floatatom -22840 -65 5 0 0 0 - - -;
#X obj -22882 -360 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1
-1 0 1;
#X obj -22840 -123 metro 1;
#X obj -22840 -20 outlet;
#X obj -22882 -382 inlet;
#X obj -22762 -151 inlet;
#X obj -22840 -44 / 10;
#X obj -22810 -88 + 0.01;
#X obj -22721 -151 r newtask;
#X obj -22751 -189 s if_addvalues;
#X obj -22825 -383 r unlocked;
#X obj -22825 -360 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1
-1 0 1;
#X obj -22840 -302 +;
#X obj -22840 -214 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1
-1 0 1;
#X msg -22840 -256 1;
#X msg -22782 -231 0;
#X obj -22782 -277 spigot;
#X obj -22840 -277 sel 2;
#X obj -22840 -330 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -22782 -256 sel 0;
#X obj -22826 -187 s autotimer;
#X obj -22749 -297 r autotimer;
#X text -22886 -400 button;
#X text -22763 -174 Reset____________;
#X text -22825 -400 unlock signal;
#X text -22797 -45 output: seconds.00 (error 1/10 sec);
#X text -22889 6 Timer activates only if both unlock and activate manually
\, deactivate time only if both lock and deactivate manually. When
timer is not active \, pd addvalues doesn't work \, so no lines to
the file are added;
#X connect 1 0 3 0;
#X connect 1 0 10 0;
#X connect 2 0 1 0;
#X connect 3 0 9 0;
#X connect 4 0 15 0;
#X connect 5 0 1 0;
#X connect 7 0 4 0;
#X connect 8 0 2 0;
#X connect 9 0 6 0;
#X connect 10 0 1 1;
#X connect 11 0 2 0;
#X connect 13 0 14 0;
#X connect 14 0 15 1;
#X connect 14 0 21 0;
#X connect 15 0 19 0;
#X connect 15 0 20 0;
#X connect 16 0 23 0;
#X connect 16 0 5 0;
#X connect 16 0 12 0;
#X connect 17 0 16 0;
#X connect 18 0 16 0;
#X connect 19 0 22 0;
#X connect 20 0 17 0;
#X connect 21 0 15 0;
#X connect 22 0 18 0;
#X connect 24 0 19 1;
#X restore 171 -312 pd timermanual;
#X obj 334 -277 vradio 15 1 1 2 empty empty empty 0 -8 0 10 -262144
-1 -1 1;
#X text 355 -279 MYO;
#X text 354 -266 phone;
#N canvas 243 334 450 300 addvalues 0;
#X obj 133 119 outlet;
#X obj 58 37 r unlocked;
#X obj 167 69 r if_addvalues;
#X obj 134 96 spigot;
#X obj 58 69 sel 0;
#X text 21 154 Every time device gets locked \, send the current values
as new line in TXT file. If the timer is not engaged \, the line is
not considered (so the user can try without being tested);
#X connect 1 0 4 0;
#X connect 2 0 3 1;
#X connect 3 0 0 0;
#X connect 4 0 3 0;
#X restore -294 -358 pd addvalues;
#X floatatom -18 -307 5 0 0 0 - - -;
#X obj 171 -470 tgl 100 0 empty empty empty 17 7 0 10 -258113 -1 -1
0 1;
#X obj -191 -380 r nline;
#X floatatom -191 -266 5 0 0 0 - - -;
#X text -3 -266 task lab;
#X text 13 -308 task num;
#N canvas 694 536 457 165 start/stop 0;
#X obj 2 -67 cnv 15 450 160 empty empty empty 20 12 0 14 -260097 -66577
0;
#X floatatom 12 -19 5 0 0 0 - - -;
#X obj 12 -42 key;
#X obj 12 2 select 32;
#X obj 12 24 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X obj 12 45 outlet;
#X text 83 2 Select outputs a bang when the spacebar (key 32) is pressed.
;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X restore 171 -506 pd start/stop;
#X text 179 -489 Spacebar = Start/Pause;
#X obj 73 -243 s col5;
#X obj 334 -235 s col7;
#X obj 171 -244 s col6;
#X obj -27 -244 s col4;
#X obj -18 -288 s col3;
#X obj -126 -245 s col2;
#X obj -191 -245 s col1;
#X msg -294 -305 \; writeline bang;
#N canvas 401 149 755 535 WRITEfile 0;
#X obj -293 -426 cnv 15 750 530 empty empty rows→file 20 12 0 14
-203904 -66577 0;
#X obj -109 -250 prepend add;
#X obj -26 -251 print TXTfile;
#X obj -188 -384 f;
#X obj -109 -172 textfile;
#N canvas 81 126 698 604 subjectCALC 0;
#X obj 22 407 s subjectID;
#X obj 22 381 + 1;
#X obj -13 245 inlet;
#X obj 139 294 inlet;
#X obj -87 169 metro 1;
#X msg -86 51 read results/tasks.txt \, rewind \; scrollfile 1;
#X obj -87 145 r scrollfile;
#X obj -86 27 loadbang;
#X msg -87 191 \; txt bang;
#X obj -86 101 s txt;
#X text 12 354 last subject n°;
#X text 187 28 1- when the patch load \, open the file and put reading
index on the beginning;
#X text 19 245 1;
#X text 170 295 2;
#X obj -85 244 r nextsubj;
#X text 54 380 basic counter;
#X text 193 267 3- receive ID of last subject and start counting from
there every time is sent bang to "nextsubj";
#X text 192 5 THIS PATCH CALCULATE CURRENT SUBJECT;
#X obj -13 381 f 0;
#X msg -13 355 19;
#X obj -81 324 loadbang;
#X msg -81 348 0;
#X text 191 141 2- when the file is open \, scroll every line and send
sbj n° to counter. At the same times \, it count the lines;
#X msg -13 301 set \$2;
#X obj 26 555 + 1;
#X text 58 554 basic counter;
#X obj -9 555 f 0;
#X msg -9 529 1584;
#X obj -81 483 loadbang;
#X msg -81 507 0;
#X text 16 528 last line n°;
#X msg -4 266 \; countlines \$1;
#X obj -9 470 r countlines;
#X msg -9 499 set \$1;
#X obj -32 444 r nextline;
#X obj 26 581 s nline;
#X text 198 469 4- do the same with lines;
#X obj 40 500 r lincounter;
#X text 229 342 sends bang also to lines counter and stop reading file
when finished;
#X text 40 444 bang to add a line;
#X msg 139 328 \; scrollfile 0 \; lincounter 1;
#X connect 1 0 0 0;
#X connect 1 0 18 1;
#X connect 2 0 23 0;
#X connect 2 0 31 0;
#X connect 3 0 19 0;
#X connect 3 0 40 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 4 0;
#X connect 7 0 5 0;
#X connect 14 0 18 0;
#X connect 18 0 1 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 21 0 18 0;
#X connect 23 0 19 0;
#X connect 24 0 26 1;
#X connect 24 0 35 0;
#X connect 26 0 24 0;
#X connect 27 0 26 0;
#X connect 28 0 29 0;
#X connect 29 0 26 0;
#X connect 32 0 33 0;
#X connect 33 0 27 0;
#X connect 34 0 26 0;
#X connect 37 0 27 0;
#X restore -109 -137 pd subjectCALC;
#X text -12 -180 FILE WRITING: this object should receive the values
from the tracking of the actions performed with the app and write them
in a .txt file called "tasks.txt" in the '/result' folder. all values
are collected as rows in the memory of the "textfile" object until
the write command is sent. the rows end with a semicolon.;
#X obj -109 -281 pack f f f f f f s;
#X msg 203 -32 \; nextline bang;
#X msg 202 22 \; txt clear;
#X text -293 -81 This patch is responsible for the output file: every
time the device locks \, it send a new line of values to the buffer
to be written in the txt. TXT format: usrID|nLine|taskID|taskLB|nClicks|time|device
;
#X text -291 -20 the timer doesn't start until the device is unlocked
\, even if the button is pressed. The same \, the timer doesn't stop
until the device is locked \, even if the toggle is pressed. When new
task is selected \, timer resets. Every time patch is opened \, it
detect the last line and subject and set them +1;
#X text 262 30 DONT TOUCH CLEAR FILE;
#X obj 29 -369 r col7;
#X obj -22 -308 r col6;
#X obj -39 -327 r col5;
#X obj -57 -346 r col4;
#X obj -74 -364 r col3;
#X obj -92 -383 r col2;
#X obj -115 -402 r col1;
#X obj -188 -407 r writeline;
#X obj 203 -55 r writeline;
#X obj 29 -344 select 0;
#X msg 29 -320 myo;
#X msg 74 -321 pho;
#X obj 29 -298 symbol;
#X text 73 -378 just send string "myo" or "pho" to the TXT based on
the device selected with radiobutton;
#X text 199 -3 increase number of current line;
#X obj -158 -216 r txt;
#X connect 1 0 4 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 4 1 5 1;
#X connect 7 0 1 0;
#X connect 7 0 2 0;
#X connect 13 0 22 0;
#X connect 14 0 7 5;
#X connect 15 0 7 4;
#X connect 16 0 7 3;
#X connect 17 0 7 2;
#X connect 18 0 7 1;
#X connect 19 0 3 1;
#X connect 20 0 3 0;
#X connect 21 0 8 0;
#X connect 22 0 23 0;
#X connect 22 1 24 0;
#X connect 23 0 25 0;
#X connect 24 0 25 0;
#X connect 25 0 7 6;
#X connect 28 0 4 0;
#X restore -295 -151 pd WRITEfile;
#X connect 8 0 43 0;
#X connect 9 0 14 0;
#X connect 10 0 39 0;
#X connect 11 0 41 0;
#X connect 12 0 36 0;
#X connect 13 0 11 0;
#X connect 15 0 16 0;
#X connect 17 0 10 0;
#X connect 17 1 28 0;
#X connect 18 0 17 0;
#X connect 19 0 12 0;
#X connect 21 0 23 1;
#X connect 22 0 38 0;
#X connect 23 0 22 0;
#X connect 24 0 37 0;
#X connect 27 0 8 0;
#X connect 28 0 40 0;
#X connect 29 0 23 0;
#X connect 30 0 31 0;
#X connect 31 0 42 0;
#X connect 34 0 29 0;
#X restore 55 -152 pd test;
#X obj -198 -157 cnv 15 115 250 empty empty empty 20 12 0 14 -204800
-66577 0;
#X obj -186 -129 vradio 25 1 0 5 empty input_select Audio_Select 0
-8 0 10 -262144 -1 -1 0;
#X text -158 -127 Microphone;
#X text -158 -105 Music;
#X text -159 -80 Phone;
#X text -159 -55 Radio;
#X text -157 -30 TV;
#X text -172 7 Audio Players;
#X obj -157 65 dac~;
#N canvas 402 82 794 594 Audio 0;
#X obj -91 -447 cnv 15 370 160 empty empty empty 20 12 0 14 -257985
-66577 0;
#X text -86 -445 Each audio sub_patch sends a stereo signal from it's
bottom two outputs (1+2 or L+R). The signals are then sent to the [multiplex~]
objects which act as a gate \, only passing the signal from the channel
number it receives. The channel numbers are received from the 'Audio_Select'
radio object in the main patch and the [r Input_select]. To avoid clicks
in the audio \, there is a [line~] object that ramps the gain from
0 to 1 over 500ms every time the channel is changed. This signal is
then sent to the next gain which is multipled by 0 to 1 from the [r
master_volume] before being sent to the left and right [outlet~]'s.
;
#X obj -91 -287 cnv 15 370 410 empty empty empty 20 12 0 14 -261234
-66577 0;
#N canvas 364 82 369 393 audio_in_out 0;
#X obj 143 72 readsf~ 2;
#X msg 143 44 open audio_in_out_s.wav;
#X msg 68 37 start;
#X msg -24 35 stop;
#X obj 194 97 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 184 213 line~;
#X obj 168 247 *~;
#X obj 144 246 *~;
#X obj 184 187 r to_line_1;
#X msg 194 120 \; pd dsp 1 \; to_line_1 0 \, 1 500 \; rpt_audio_1 bang
;
#X obj 68 -9 r rpt_audio_1;
#X obj 68 14 t b b;
#X obj 143 341 outlet~;
#X obj 168 314 outlet~;
#X obj -24 13 r global_stop;
#X obj 70 190 r volume_1;
#X obj 216 95 r global_start;
#X connect 0 0 7 0;
#X connect 0 1 6 0;
#X connect 0 2 4 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 9 0;
#X connect 5 0 6 1;
#X connect 5 0 7 1;
#X connect 6 0 13 0;
#X connect 7 0 12 0;
#X connect 8 0 5 0;
#X connect 10 0 11 0;
#X connect 11 0 2 0;
#X connect 11 1 1 0;
#X connect 14 0 3 0;
#X connect 15 0 7 0;
#X connect 15 0 6 0;
#X connect 16 0 9 0;
#X restore 69 -276 pd audio_in_out;
#N canvas 0 92 369 393 microphone 0;
#X obj 143 72 readsf~ 2;
#X msg 68 37 start;
#X msg -24 35 stop;
#X obj 194 97 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 184 213 line~;
#X obj 168 247 *~;
#X obj 144 246 *~;
#X obj 68 14 t b b;
#X obj 143 341 outlet~;
#X obj 168 314 outlet~;
#X obj -24 13 r global_stop;
#X obj 68 -9 r rpt_audio_2;
#X msg 194 120 \; pd dsp 1 \; to_line_2 0 \, 1 500 \; rpt_audio_2 bang
;
#X obj 184 187 r to_line_2;
#X obj 80 197 r volume_2;
#X obj 215 96 r global_start;
#X obj -19 197 catch~ feedback;
#X msg 143 44 open microphone_ultimate.wav;
#X connect 0 0 6 0;
#X connect 0 1 5 0;
#X connect 0 2 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 12 0;
#X connect 4 0 5 1;
#X connect 4 0 6 1;
#X connect 5 0 9 0;
#X connect 6 0 8 0;
#X connect 7 0 1 0;
#X connect 7 1 17 0;
#X connect 10 0 2 0;
#X connect 11 0 7 0;
#X connect 13 0 4 0;
#X connect 14 0 6 0;
#X connect 14 0 5 0;
#X connect 15 0 12 0;
#X connect 16 0 5 0;
#X connect 16 0 6 0;
#X connect 17 0 0 0;
#X restore 70 -243 pd microphone;
#N canvas 466 82 408 394 music 0;
#X obj 143 72 readsf~ 2;
#X msg 68 37 start;
#X msg -24 35 stop;
#X obj 194 97 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 184 213 line~;
#X obj 168 247 *~;
#X obj 143 246 *~;
#X obj 68 14 t b b;
#X obj -24 13 r global_stop;
#X obj 68 -9 r rpt_audio_3;
#X msg 194 120 \; pd dsp 1 \; to_line_3 0 \, 1 500 \; rpt_audio_3 bang
;
#X obj 184 187 r to_line_3;
#X obj 70 190 r volume_3;
#X obj 215 96 r global_start;
#X obj 143 319 outlet~;
#X obj 200 318 outlet~;
#X obj 143 292 hip~ 500;
#X obj 200 291 hip~ 500;
#X obj 245 259 r freqbass;
#X msg 143 44 open music_ultimate.wav;
#X connect 0 0 6 0;
#X connect 0 1 5 0;
#X connect 0 2 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 10 0;
#X connect 4 0 5 1;
#X connect 4 0 6 1;
#X connect 5 0 17 0;
#X connect 6 0 16 0;
#X connect 7 0 1 0;
#X connect 7 1 19 0;
#X connect 8 0 2 0;
#X connect 9 0 7 0;
#X connect 11 0 4 0;
#X connect 12 0 6 0;
#X connect 12 0 5 0;
#X connect 13 0 10 0;
#X connect 16 0 14 0;
#X connect 17 0 15 0;
#X connect 18 0 17 1;
#X connect 18 0 16 1;
#X connect 19 0 0 0;
#X restore 70 -208 pd music;
#N canvas 74 37 369 393 phone 0;
#X obj 143 72 readsf~ 2;
#X msg 68 37 start;
#X msg -24 35 stop;
#X obj 194 97 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 184 213 line~;
#X obj 168 247 *~;
#X obj 143 247 *~;
#X obj 68 14 t b b;
#X obj 143 335 outlet~;
#X obj 168 314 outlet~;
#X obj -24 13 r global_stop;
#X obj 68 -9 r rpt_audio_4;
#X msg 143 44 open phone_s.wav;
#X msg 194 120 \; pd dsp 1 \; to_line_4 0 \, 1 500 \; rpt_audio_4 bang
;
#X obj 184 187 r to_line_4;
#X obj 70 190 r volume_4;
#X obj 214 97 r global_start;
#X obj -17 189 catch~ noise;
#X connect 0 0 6 0;
#X connect 0 1 5 0;
#X connect 0 2 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 13 0;
#X connect 4 0 5 1;
#X connect 4 0 6 1;
#X connect 5 0 9 0;
#X connect 6 0 8 0;
#X connect 7 0 1 0;
#X connect 7 1 12 0;
#X connect 10 0 2 0;
#X connect 11 0 7 0;
#X connect 12 0 0 0;
#X connect 14 0 4 0;
#X connect 15 0 6 0;
#X connect 15 0 5 0;
#X connect 16 0 13 0;
#X connect 17 0 6 0;
#X connect 17 0 5 0;
#X restore 71 -175 pd phone;
#N canvas 391 82 369 393 radio 0;
#X obj 143 72 readsf~ 2;
#X msg 68 37 start;
#X msg -24 35 stop;
#X obj 194 97 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 184 213 line~;
#X obj 168 233 *~;
#X obj 144 232 *~;
#X obj 68 14 t b b;
#X obj 143 299 outlet~;
#X obj 206 304 outlet~;
#X obj -24 13 r global_stop;
#X obj 68 -9 r rpt_audio_5;
#X msg 194 120 \; pd dsp 1 \; to_line_5 0 \, 1 500 \; rpt_audio_5 bang
;
#X obj 184 187 r to_line_5;
#X obj 70 190 r volume_5;
#X obj 214 95 r global_start;
#X obj 143 272 hip~ 500;
#X obj 205 272 hip~ 500;
#X obj 212 245 r freqbass;
#X msg 143 44 open radio_ultimate.wav;
#X connect 0 0 6 0;
#X connect 0 1 5 0;
#X connect 0 2 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 12 0;
#X connect 4 0 5 1;
#X connect 4 0 6 1;
#X connect 5 0 17 0;
#X connect 6 0 16 0;
#X connect 7 0 1 0;
#X connect 7 1 19 0;
#X connect 10 0 2 0;
#X connect 11 0 7 0;
#X connect 13 0 4 0;
#X connect 14 0 6 0;
#X connect 14 0 5 0;
#X connect 15 0 12 0;
#X connect 16 0 8 0;
#X connect 17 0 9 0;
#X connect 18 0 17 1;
#X connect 18 0 16 1;
#X connect 19 0 0 0;
#X restore 72 -139 pd radio;
#N canvas 17 87 369 393 tv 0;
#X obj -146 -64 readsf~ 2;
#X msg -221 -99 start;
#X msg -313 -101 stop;
#X obj -95 -39 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -105 77 line~;
#X obj -121 111 *~;
#X obj -145 110 *~;
#X obj -221 -122 t b b;
#X obj -146 205 outlet~;
#X obj -121 178 outlet~;
#X obj -313 -123 r global_stop;
#X obj -219 54 r volume_6;
#X obj -105 51 r to_line_6;
#X obj -221 -145 r rpt_audio_6;
#X msg -95 -16 \; pd dsp 1 \; to_line_6 0 \, 1 500 \; rpt_audio_6 bang
;
#X obj -73 -40 r global_start;
#X obj -123 145 lop~;
#X obj -154 169 lop~;
#X obj -43 121 r freqtreb;
#X msg -146 -92 open tv_ultimate.wav;
#X connect 0 0 6 0;
#X connect 0 1 5 0;
#X connect 0 2 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 14 0;
#X connect 4 0 5 1;
#X connect 4 0 6 1;
#X connect 5 0 16 0;
#X connect 6 0 17 0;
#X connect 7 0 1 0;
#X connect 7 1 19 0;
#X connect 10 0 2 0;
#X connect 11 0 6 0;
#X connect 11 0 5 0;
#X connect 12 0 4 0;
#X connect 13 0 7 0;
#X connect 15 0 14 0;
#X connect 16 0 9 0;
#X connect 17 0 8 0;
#X connect 18 0 16 1;
#X connect 18 0 17 1;
#X connect 19 0 0 0;
#X restore 73 -106 pd tv;
#X obj -42 -7 line~;
#X obj 132 -9 line~;
#X obj -56 17 *~;
#X obj 116 17 *~;
#X obj -42 -29 r to_line_out;
#X obj 132 -31 r to_line_out;
#X obj 13 72 *~;
#X obj 64 73 *~;
#X obj 8 21 r master_volume;
#X obj 13 102 outlet~;
#X obj 64 102 outlet~;
#X obj -57 -71 multiplex~ 1 2 3 4 5 6;
#X obj 116 -68 multiplex~ 1 2 3 4 5 6;
#X obj -57 -192 r inputnum;
#X obj 169 -123 r inputnum;
#X obj 280 -127 cnv 15 410 210 empty empty empty 20 12 0 14 -204786
-66577 0;
#X floatatom 415 -87 5 0 5 0 - - -;
#X obj 379 -52 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 373 -111 inlet;
#X obj 304 -111 loadbang 0;
#N canvas 771 445 450 300 treble_boost 0;
#X obj -486 -223 inlet;
#X obj -486 -175 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -424 -200 r inputnum;
#X obj -420 -120 s freqtreb;
#X msg -456 -157 44100;
#X msg -417 -154 300;
#X obj -486 -200 route 3;
#X connect 0 0 6 0;
#X connect 2 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 6 0 1 0;
#X connect 6 0 4 0;
#X connect 6 1 5 0;
#X restore 433 -21 pd treble_boost;
#X obj 415 -112 r preset_select;
#N canvas 900 229 450 300 noise_reduce 0;
#X obj -169 -1 inlet;
#X obj -164 54 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -169 78 cnv 15 100 60 empty empty empty 20 12 0 14 -258113 -66577
0;
#X obj -141 112 noise~;
#X text -142 84 Noise;
#X obj -166 25 route 0;
#X obj -141 150 *~ 0.5;
#X obj -142 180 throw~ noise;
#X msg -78 113 0;
#X msg -47 117 0.05;
#X obj -50 65 r inputnum;
#X connect 0 0 5 0;
#X connect 3 0 6 0;
#X connect 5 0 1 0;
#X connect 5 0 8 0;
#X connect 5 1 9 0;
#X connect 6 0 7 0;
#X connect 8 0 6 1;
#X connect 9 0 6 1;
#X connect 10 0 9 0;
#X restore 426 4 pd noise_reduce;
#N canvas 828 310 538 458 feedback_killer 0;
#X obj 3 -19 inlet;
#X obj 102 -4 cnv 15 270 360 empty empty empty 20 12 0 14 -260097 -66577
0;
#X obj 114 334 *~ 0.5;
#X obj 202 334 *~ 0.5;
#X obj 114 307 cycle~ 990;
#X obj 202 306 cycle~ 1020;
#X floatatom 164 136 5 0 0 0 - - -;
#X floatatom 203 137 5 0 0 0 - - -;
#X obj 202 160 / 2;
#X msg 114 237 \$1 500;
#X obj 114 262 line~;
#X obj 114 214 -;
#X msg 202 238 \$1 500;
#X obj 202 263 line~;
#X obj 202 215 +;
#X obj 202 185 t b f;
#X obj 114 188 t b f;
#X obj 203 82 metro 1000;
#X obj 203 59 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 203 29 loadbang;
#X msg 164 84 6000;
#X msg 280 81 2;
#X obj 203 112 counter;
#X msg 311 81 0;
#X msg 341 81 23;
#X text 112 2 Feedback Simulator;
#X msg 3 303 0;
#X obj 114 367 throw~ feedback;
#X obj 282 304 r set_off;
#X obj 27 256 r inputnum;
#X obj 29 278 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 5 5 route 1;
#X msg 31 300 0.01;
#X connect 0 0 31 0;
#X connect 2 0 27 0;
#X connect 3 0 27 0;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X connect 6 0 14 0;
#X connect 6 0 11 0;
#X connect 7 0 8 0;
#X connect 8 0 15 0;
#X connect 8 0 16 0;
#X connect 9 0 10 0;
#X connect 10 0 4 0;
#X connect 11 0 9 0;
#X connect 12 0 13 0;
#X connect 13 0 5 0;
#X connect 14 0 12 0;
#X connect 15 0 14 0;
#X connect 15 1 14 1;
#X connect 16 0 11 0;
#X connect 16 1 11 1;
#X connect 17 0 22 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 19 0 20 0;
#X connect 19 0 21 0;
#X connect 19 0 23 0;
#X connect 19 0 24 0;
#X connect 20 0 6 0;
#X connect 21 0 22 1;
#X connect 22 0 7 0;
#X connect 23 0 22 2;
#X connect 24 0 22 4;
#X connect 26 0 2 1;
#X connect 26 0 3 1;
#X connect 28 0 2 1;
#X connect 28 0 3 1;
#X connect 29 0 30 0;
#X connect 30 0 32 0;
#X connect 31 0 26 0;
#X connect 31 1 30 0;
#X connect 32 0 2 1;
#X connect 32 0 3 1;
#X restore 434 -46 pd feedback_killer;
#X text 557 -47 Works with Microphone;
#X text 527 5 Works with Phone;
#X text 535 -23 Works with TV;
#X obj 281 -449 cnv 15 400 160 empty empty empty 20 12 0 14 -4032 -66577
0;
#X text 294 -443 'Preset Select' receives nubers 0 to 3 When a preset
receives it's number \, the corresponding effect is turned to 0 (by
sending a bang);
#X obj 223 -287 cnv 15 250 160 empty empty empty 20 12 0 14 -261234
-66577 0;
#X obj 347 -271 r input_select;
#X floatatom 305 -221 5 0 5 0 - - -;
#X obj 305 -197 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 238 -171 \; to_line_out 0 \, 1 500 \;;
#X obj 305 -270 inlet;
#X obj 326 -201 s inputnum;
#X obj 305 -244 + 1;
#X obj 236 -270 loadbang 0;
#N canvas 350 312 564 192 bass_boost 0;
#X obj -126 -21 inlet;
#X obj -126 103 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg -103 65 0;
#X obj -42 105 s freqbass;
#X obj -43 -22 r inputnum;
#X msg -43 66 2000;
#X obj -126 7 route 2;
#X text 59 -6 The input from the inlet sends a bang out of [route]'s
left outlet if it receives the 'Bass Boost' preset and a bang out of
it's right outlet when it receives any other number. The left outlet
triggers the message 0 to be sent to the filter in the Music and Radio
subpatches \, turning it off. The right outlet triggers the message
2000 to be sent \, causing the cutoff frequency to move to 2000hz.
;
#X connect 0 0 6 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X connect 6 0 1 0;
#X connect 6 0 2 0;
#X connect 6 1 5 0;
#X restore 415 32 pd bass_boost 1;
#X text 508 30 Works with Radio & Music;
#X text 498 61 comment;
#X connect 3 0 20 0;
#X connect 3 1 21 0;
#X connect 4 0 20 1;
#X connect 4 1 21 1;
#X connect 5 0 20 2;
#X connect 5 1 21 2;
#X connect 6 0 20 3;
#X connect 6 1 21 3;
#X connect 7 0 20 4;
#X connect 7 1 21 4;
#X connect 8 0 20 5;
#X connect 8 1 21 5;
#X connect 9 0 11 1;
#X connect 10 0 12 1;
#X connect 11 0 15 0;
#X connect 12 0 16 0;
#X connect 13 0 9 0;
#X connect 14 0 10 0;
#X connect 15 0 18 0;
#X connect 16 0 19 0;
#X connect 17 0 15 1;
#X connect 17 0 16 1;
#X connect 20 0 11 0;
#X connect 21 0 12 0;
#X connect 22 0 20 0;
#X connect 23 0 21 0;
#X connect 25 0 26 0;
#X connect 25 0 32 0;
#X connect 25 0 29 0;
#X connect 25 0 31 0;
#X connect 25 0 47 0;
#X connect 27 0 25 0;
#X connect 28 0 25 0;
#X connect 30 0 25 0;
#X connect 39 0 45 0;
#X connect 40 0 41 0;
#X connect 40 0 44 0;
#X connect 41 0 42 0;
#X connect 43 0 45 0;
#X connect 45 0 40 0;
#X connect 46 0 45 0;
#X restore -186 28 pd Audio Players;
#X text -49 -83 Bass Boost;
#X connect 3 0 2 0;
#X connect 5 0 4 0;
#X connect 8 0 9 0;
#X connect 14 0 13 0;
#X connect 15 0 14 0;
#X connect 18 0 33 1;
#X connect 25 0 33 0;
#X connect 33 0 32 0;
#X connect 33 1 32 1;
